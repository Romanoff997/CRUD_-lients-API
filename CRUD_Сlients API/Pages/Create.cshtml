@page
@using CRUD_Сlients_API.Helpers;
@using CRUD_Сlients_API.Pages;
@using CRUD_Сlients_API.Models.Client;
@using CRUD_Сlients_API.Services;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject IJsonConverter _converter
@model Create
@{

    ViewBag.Title = "Create client";
    Layout = "_Layout";
    var children = CRUD_Сlients_API.Helpers.SessionExtensions.Get<List<Child>>(HttpContext.Session, "children", _converter);
    if (children != null)
        Model.currClient.children = children;


}

<h2>Добавление нового клиента</h2>

<form method="post" id="myForm">
    @*<input type="hidden" name="handler" value="Test" />
    <div asp-validation-summary="ModelOnly"></div>
    <span asp-validation-for="Email"></span>*@
    <div class="form-group">
        <label asp-for="currClient.name">Имя:</label>
        <input asp-for="currClient.name" type="text"  class="form-control" id="name">
    </div>
    <div class="form-group">
        <label asp-for="currClient.surname">Фамилия:</label>
        <input asp-for="currClient.surname" type="text" class="form-control" id="surname">
    </div>
    <div class="form-group">
        <label asp-for="currClient.patronymic">Отчество:</label>
        <input type="text" class="form-control" id="patronymic" asp-for="currClient.dob">
    </div>
    <div class="form-group">
        <label asp-for="currClient.dob">Дата рождения:</label>
        <input type="date" class="form-control" id="dob" asp-for="currClient.dob">
    </div>
    
    <h3>Паспорт</h3>
    <div class="form-group">
        <label asp-for="currClient.passport.number" >Номер:</label>
        <input type="number" class="form-control" id="dob" asp-for="currClient.passport.number">
    </div>    
    <div class="form-group">
        <label asp-for="currClient.passport.series">Серия</label>
        <input type="number" class="form-control" id="dob" asp-for="currClient.passport.series">
    </div> 
    <div class="form-group">
        <label asp-for="currClient.passport.giver">Выдано</label>
        <input type="text" class="form-control" id="dob" asp-for="currClient.passport.giver">
    </div> 
    <div class="form-group">
        <label asp-for="currClient.passport.dateIssued">Дата выдачи</label>
        <input type="date" class="form-control" id="dob" asp-for="currClient.passport.dateIssued">
    </div>

    <h3>Дети</h3>
    <div class="form-group">
        <input type="text" class="form-control" id="childName" placeholder="Имя">
        <input type="text" class="form-control" id="childSurname" placeholder="Фамилия">
        <input type="text" class="form-control" id="childPatronymic" placeholder="Отчество">
        <input type="date" class="form-control" id="childDob"><
        <button type="button" class="btn btn-primary add-child-btn">Добавить</button>
    </div>

    <div id="listContainer">
        @Html.Partial("ChildrenPartial", Model.currClient.children)
    </div>
    
    @*Html.AntiForgeryToken()*@
    <input type="button" class="btn btn-primary create-client-btn" id="create" value="Create" />
</form>

@section scripts {
    @*Html.AntiForgeryToken();*@
    <script>
        $(function () {
            $('.create-client-btn').click(function () {
                var token = "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken";
                alert("Send!");
                alert("@Model.currClient.name");
                $.ajax({
                    type: "POST",
                    headers: {
                        "RequestVerificationToken": token
                    },
                    url: "/Create", 
                    data: {
                        name: "@Model.currClient.name",
                        surname: "Model.currClient.surname"
                        //children: "Model.currClient.children"
                    },
                    success: function (result) {

                    },
                    error: function (request, error) {
                        console.log(arguments);
                        alert(" Can't do because: " + error);
                    },

                });
            });
            // Обработчик клика на кнопку "Добавить"
            $('.add-child-btn').click(function () {
                var token = "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken";
                alert("@Model.currClient.name");
                $.ajax({
                    type: "GET",
                    headers: {
                        "RequestVerificationToken": token
                    },
                    url: "/Create?handler=AddChild", //"Url.Page("Create","AddChild")", //"/Create?handler=AddChild",//'Url.Action(AddChild, Client)',
                    data: {
                        name: $('#childName').val(),
                        surname: $('#childSurname').val(),
                        patronymic: $('#childPatronymic').val(),
                        dob: $('#childDob').val()
                    },
                    success: function (result) {
                        $('#childName').val('');
                        $('#childSurname').val('');
                        $('#childPatronymic').val('');
                        $('#childDob').val('');
                        ChildrenUpdate(result);
                    },
                    error: function (request, error) {
                        console.log(arguments);
                        alert(" Can't do because: " + error);
                    },

                });
             });

            function ChildrenUpdate(list)
            {
                $('#listContainer').empty().append(list);
            }

            // Обработчик клика на кнопку "Удалить"
            $(document).on('click', '#delete', function () {
                var childId = $(this).data('id');
                alert(childId);
                var token = "@Xsrf.GetAndStoreTokens(HttpContext).RequestToken";
                $.ajax({
                    type: "GET",
                    headers: {
                        "RequestVerificationToken": token
                    },
                    url: "/Create?handler=RemoveChild", //"Url.Page("Create","AddChild")", //"/Create?handler=AddChild",//'Url.Action(AddChild, Client)',
                    data: {
                        id: childId
                    },
                    success: function (result) {
                        //$(this).closest('tr').remove();
                        ChildrenUpdate(result);
                    },
                    error: function (request, error) {
                        console.log(arguments);
                    },

                });
                
            });
        });
    </script>
}